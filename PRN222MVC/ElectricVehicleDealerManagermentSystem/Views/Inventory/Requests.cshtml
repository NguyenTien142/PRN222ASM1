@model List<BusinessObject.BusinessObject.InventoryModels.Respond.GetInventoryRequestRespond>

@{
    ViewData["Title"] = "Inventory Requests";
    Layout = "~/Views/Shared/Dealer_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">
                        <i class="bi bi-box-seam me-2"></i>Inventory Requests Management
                    </h3>
                </div>
                <div class="card-body">
                    @if (TempData["Success"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            @TempData["Success"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    @if (TempData["Error"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            @TempData["Error"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    <!-- Stats Cards -->
                    <div class="row mb-4">
                        <div class="col-md-3">
                            <div class="card bg-warning text-white">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between">
                                        <div>
                                            <h6>Pending</h6>
                                            <h3>@Model.Count(r => r.Status == "Pending")</h3>
                                        </div>
                                        <i class="bi bi-clock-history fs-1"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card bg-success text-white">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between">
                                        <div>
                                            <h6>Approved</h6>
                                            <h3>@Model.Count(r => r.Status == "Approved")</h3>
                                        </div>
                                        <i class="bi bi-check-circle fs-1"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card bg-danger text-white">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between">
                                        <div>
                                            <h6>Denied</h6>
                                            <h3>@Model.Count(r => r.Status == "Denied")</h3>
                                        </div>
                                        <i class="bi bi-x-circle fs-1"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card bg-info text-white">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between">
                                        <div>
                                            <h6>Total</h6>
                                            <h3>@Model.Count()</h3>
                                        </div>
                                        <i class="bi bi-list-ul fs-1"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Filter Tabs -->
                    <ul class="nav nav-tabs mb-3" id="requestTabs" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="all-tab" data-bs-toggle="tab" data-bs-target="#all" type="button" role="tab">
                                All Requests
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="pending-tab" data-bs-toggle="tab" data-bs-target="#pending" type="button" role="tab">
                                Pending (@Model.Count(r => r.Status == "Pending"))
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="approved-tab" data-bs-toggle="tab" data-bs-target="#approved" type="button" role="tab">
                                Approved
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="denied-tab" data-bs-toggle="tab" data-bs-target="#denied" type="button" role="tab">
                                Denied
                            </button>
                        </li>
                    </ul>

                    <!-- Requests Table -->
                    <div class="tab-content" id="requestTabContent">
                        <div class="tab-pane fade show active" id="all" role="tabpanel">
                            @await Html.PartialAsync("_RequestsTable", Model)
                        </div>
                        <div class="tab-pane fade" id="pending" role="tabpanel">
                            @await Html.PartialAsync("_RequestsTable", Model.Where(r => r.Status == "Pending").ToList())
                        </div>
                        <div class="tab-pane fade" id="approved" role="tabpanel">
                            @await Html.PartialAsync("_RequestsTable", Model.Where(r => r.Status == "Approved").ToList())
                        </div>
                        <div class="tab-pane fade" id="denied" role="tabpanel">
                            @await Html.PartialAsync("_RequestsTable", Model.Where(r => r.Status == "Denied").ToList())
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Process Request Modal -->
<div class="modal fade" id="processModal" tabindex="-1" aria-labelledby="processModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="processModalLabel">Process Inventory Request</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="processForm">
                    <input type="hidden" id="requestId" name="RequestId">
                    <input type="hidden" id="isApproved" name="IsApproved">
                    
                    <div id="requestDetails" class="mb-3">
                        <!-- Request details will be populated here -->
                    </div>
                    
                    <div class="mb-3">
                        <label for="adminComment" class="form-label">Comment (Optional)</label>
                        <textarea class="form-control" id="adminComment" name="AdminComment" rows="3" placeholder="Add your comment here..."></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success" id="approveBtn">
                    <i class="bi bi-check-circle me-1"></i>Approve
                </button>
                <button type="button" class="btn btn-danger" id="denyBtn">
                    <i class="bi bi-x-circle me-1"></i>Deny
                </button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .card {
            border: none;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            border-radius: 10px;
        }
        .card-header {
            background-color: #f8f9fa;
            border-bottom: 1px solid #dee2e6;
            border-radius: 10px 10px 0 0 !important;
        }
        .table-hover tbody tr:hover {
            background-color: rgba(0, 0, 0, 0.075);
        }
        .nav-tabs .nav-link.active {
            background-color: #0d6efd;
            color: white;
            border-color: #0d6efd;
        }
        .status-badge {
            font-size: 0.75rem;
            padding: 0.375rem 0.75rem;
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Process request buttons
            $('.process-btn').click(function() {
                var requestId = $(this).data('request-id');
                var action = $(this).data('action');
                var vehicleModel = $(this).data('vehicle-model');
                var vehicleColor = $(this).data('vehicle-color');
                var quantity = $(this).data('quantity');
                var requester = $(this).data('requester');
                var dealerAddress = $(this).data('dealer-address');
                
                $('#requestId').val(requestId);
                $('#isApproved').val(action === 'approve');
                
                var actionText = action === 'approve' ? 'approve' : 'deny';
                var actionClass = action === 'approve' ? 'text-success' : 'text-danger';
                
                $('#requestDetails').html(`
                    <div class="alert alert-info">
                        <h6>Request Details:</h6>
                        <p><strong>Vehicle:</strong> ${vehicleModel} (${vehicleColor})</p>
                        <p><strong>Quantity:</strong> ${quantity}</p>
                        <p><strong>Requester:</strong> ${requester}</p>
                        <p><strong>Dealer:</strong> ${dealerAddress}</p>
                        <p class="${actionClass}"><strong>Action:</strong> ${actionText.toUpperCase()}</p>
                    </div>
                `);
                
                if (action === 'approve') {
                    $('#approveBtn').show();
                    $('#denyBtn').hide();
                } else {
                    $('#approveBtn').hide();
                    $('#denyBtn').show();
                }
                
                $('#processModal').modal('show');
            });

            // Approve button click
            $('#approveBtn').click(function() {
                processRequest();
            });

            // Deny button click
            $('#denyBtn').click(function() {
                processRequest();
            });

            function processRequest() {
                var formData = {
                    RequestId: $('#requestId').val(),
                    IsApproved: $('#isApproved').val() === 'true',
                    AdminComment: $('#adminComment').val()
                };

                $.ajax({
                    url: '@Url.Action("Process", "Inventory")',
                    type: 'POST',
                    data: formData,
                    success: function(response) {
                        if (response.success) {
                            $('#processModal').modal('hide');
                            location.reload();
                        } else {
                            alert('Error: ' + response.message);
                        }
                    },
                    error: function() {
                        alert('An error occurred while processing the request.');
                    }
                });
            }
        });
    </script>
}